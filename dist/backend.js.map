{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fluture\"","webpack:///./models/Tokens.js","webpack:///./utils/helpers.js","webpack:///external \"sanctuary\"","webpack:///external \"express\"","webpack:///external \"mongoose\"","webpack:///external \"fluture-sanctuary-types\"","webpack:///./middleware/auth.js","webpack:///external \"jsonwebtoken\"","webpack:///./models/Users.js","webpack:///external \"bcryptjs\"","webpack:///external \"path\"","webpack:///./routes/api/auth.js","webpack:///./routes/api/users.js","webpack:///./routes/api/verify.js","webpack:///./models/Planets.js","webpack:///./routes/api/planets.js","webpack:///./models/Posts.js","webpack:///./routes/api/posts.js","webpack:///./server.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","TokenSchema","Schema","mongoose","userId","type","String","required","ref","token","createdAt","Date","default","now","expiresAfterSeconds","Token","model","secret","S","checkTypes","env","concat","flutureEnv","toMaybe","x","Nothing","Just","eitherToFuture","either","Future","reject","of","maybeToFuture","left","compose","maybeToEither","getModel","params","rej","res","findOne","then","getUser","User","getToken","err","status","message","eitherNewUser","user","maybe","Right","_","Left","checkUnique","chain","salt","encaseN","bcrypt","genSalt","hash","encaseN2","saltAndHash","pw","saveOr","error","save","mapRej","K","genToken","process","JWT_SECRET","payload","encaseN3","jwt","sign","expiresIn","auth","req","next","header","json","msg","decoded","verify","UserSchema","email","unique","password","registerDate","isVerified","Boolean","router","express","Router","compare","post","unhashed","body","prop","bimap","id","_id","fork","e","obj","findById","select","map","noTokenErr","noUserErr","beenVerifiedErr","PlanetSchema","Planet","find","exec","planets","end","planet","deleteOne","success","PostSchema","authorId","title","maxlength","Post","newPost","returnedPosts","patch","findByIdAndUpdate","new","updatedPost","port","PORT","app","uri","MONGODB_URI","dbOptions","eventualConnection","connect","options","main","startDBIfCommandline","mainModule","console","log","use","send","NASA_API_KEY","usersRouter","planetsRouter","authRouter","verifyRouter","postRouter","sendFile","path","resolve","__dirname","isJust","isMain","listen","startServerIfCommandline"],"mappings":"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","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","module.exports = require(\"fluture\");","import mongoose from 'mongoose'\n\nconst Schema = mongoose.Schema\n\nconst TokenSchema = new Schema ({\n  userId: {\n    type: String,\n    required: true,\n    ref: 'user',\n  },\n  token: {\n    type: String,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    required: true,\n    default: Date.now,\n    // 60s * 60m * 12hr\n    expiresAfterSeconds: 60 * 60 * 12,\n  },\n})\n\nconst Token = mongoose.model ('token', TokenSchema)\n\nexport default Token\n","/* eslint-env es6, node */\n// Import dependencies\nimport bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\nimport Future from 'fluture'\nimport {env as flutureEnv} from 'fluture-sanctuary-types'\nimport {create, env} from 'sanctuary'\n\nconst S = create ({// Initialize type environment\n  checkTypes: true,\n  env: env.concat (flutureEnv),\n})\n\nimport Token from '../models/Tokens'\nimport User from '../models/Users'\n\n// toMaybe :: a -> Maybe a\nexport const toMaybe = x => x === null || x === undefined ? S.Nothing :\n  /* otherwise */                                           S.Just (x)\n\n// eitherToFuture :: Either e r -> Future e r\nexport const eitherToFuture = S.either (Future.reject) (Future.of)\n\n// maybeToFuture :: b -> Maybe a -> Future b a\nexport const maybeToFuture = left => S.compose\n  (eitherToFuture)\n  (S.maybeToEither (left))\n\n// getModel :: String -> {} -> Future Error (Maybe {})\nexport const getModel = model => params => Future ((rej, res) => {\n  model\n    .findOne (params)\n    .then (S.compose (res) (toMaybe))\n    .catch (rej)\n})\n\n// getUser :: {} -> Future Error (Maybe {})\nexport const getUser = getModel (User)\n\n// getToken :: Object -> Future Object (Maybe Object)\nexport const getToken = getModel (Token)\n\n//           err :: Number -> String -> Object\nexport const err = status => message => ({status, message})\n\n// eitherNewUser :: {} -> Maybe {} -> Either String {}\nconst eitherNewUser = user => S.maybe\n  (S.Right ({...user}))\n  (_ => S.Left ({\n    status: 400,\n    message: 'User already exists',\n  }))\n\n// checkUnique :: {} -> String -> Future Error {}\nexport const checkUnique = user => S.compose\n  (S.chain (S.compose (eitherToFuture) (eitherNewUser (user))))\n  (getUser)\n\n// salt :: Number -> Future Error String\nconst salt = Future.encaseN (bcrypt.genSalt)\n\n// hash :: String -> String -> Future Error String\nconst hash = Future.encaseN2 (bcrypt.hash)\n\n// saltAndHash :: Number -> String -> Future Error String\nexport const saltAndHash = n => pw => salt (n).chain (hash (pw))\n\n// save :: {} -> Future Error {}\nexport const save = model => Future ((rej, res) => {\n  model.save ().then (res).catch (rej)\n})\n\n//    saveOr :: Object -> Object -> Future Object Object\nexport const saveOr = error => model => save (model)\n  .mapRej (S.K (error))\n\n// signToken :: String -> {} | nil -> {} -> Future Error String\nexport const signToken = secret => params => payload => Future.encaseN3\n  (jwt.sign)\n  (payload)\n  (secret)\n  (params)\n\n// genToken :: {} -> Future Error String\nexport const genToken = signToken (process.env.JWT_SECRET) ({expiresIn: 3600})\n","module.exports = require(\"sanctuary\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"fluture-sanctuary-types\");","/* eslint-env es6, node */\nimport jwt from 'jsonwebtoken'\n\nconst auth = (req, res, next) => {\n  const token = req.header ('x-auth-token')\n\n  if (!token) {\n    return res.status (401).json ({msg: 'No token, authorization denied'})\n  }\n\n  try {\n    const decoded = jwt.verify (token, process.env.JWT_SECRET)\n    req.user = decoded\n    next ()\n  } catch (err) {\n    res.status (400).json ({msg: 'Token is not valid'})\n  }\n}\n\nexport default auth\n","module.exports = require(\"jsonwebtoken\");","import mongoose from 'mongoose'\nconst Schema = mongoose.Schema\n\nconst UserSchema = new Schema ({\n  name: {\n    type: String,\n    required: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  registerDate: {\n    type: String,\n    default: Date.now,\n  },\n  isVerified: {\n    type: Boolean,\n    required: true,\n    default: false,\n  },\n})\n\nconst User = mongoose.model ('user', UserSchema)\n\nexport default User\n","module.exports = require(\"bcryptjs\");","module.exports = require(\"path\");","import express from 'express'\nconst router = express.Router ()\nimport bcrypt from 'bcryptjs'\nimport * as Future from 'fluture'\nimport {env as flutureEnv} from 'fluture-sanctuary-types'\nimport {create, env} from 'sanctuary'\nimport {\n  getUser,\n  genToken,\n  maybeToFuture,\n  toMaybe,\n} from '../../utils/helpers'\n\nconst S = create ({checkTypes: true, env: env.concat (flutureEnv)})\n\nimport auth from '../../middleware/auth'\nimport User from '../../models/Users'\n\n// compare :: String -> String -> Future Error Boolean\nexport const compare = Future.encaseP2 (bcrypt.compare)\n\n// validateUser :: String -> {} -> Future Error {}\nexport const validateUser = unhashed => user => S.compose\n  (S.compose\n    (S.chain (x => x ? Future.of (user) :\n       /* otherwise */ Future.reject ({\n         status: 400,\n         message: 'Invalid credentials',\n       })))\n    (compare (unhashed)))\n  (S.prop ('password')) (user)\n\n// getUserById :: String -> Future (Maybe {})\nconst getUserById = id => Future.Future ((rej, res) => {\n  User\n    .findById ({id})\n    .select ('-password')\n    .then (toMaybe (res))\n    .catch (rej)\n})\n\n// @route  POST /api/auth\n// @desc   Authorize user\n// @access Public\nrouter.post ('/', (req, res) => {\n  const {email, password} = req.body\n\n  // Simple validation\n  if (!email || !password) {\n    res.status (400).json ({msg: 'Please enter all fields'})\n  }\n\n  const eventualResponse = getUser ({email})\n    .chain (maybeToFuture ({status: 400, message: 'User does not exist'}))\n    .chain (validateUser (password))\n    .chain (r => genToken (S.prop ('id') (r))\n      .bimap (\n        _ => ({status: 400, message: 'Error signing token'}),\n        token => ({token, user: {id: r._id, name: r.name, email: r.email}})))\n\n  eventualResponse\n    .fork (\n      e => res.status (e.status).json ({msg: e.message}),\n      obj => res.json (obj)\n    )\n})\n\n// @route  GET /api/auth/user\n// @desc   Get user data\n// @access Private\nrouter.get ('/user', auth, (req, res) => {\n  const eventualResponse = getUserById (req.user.id)\n    .chain (maybeToFuture ({status: 400, message: 'User not found'}))\n\n  eventualResponse\n    .fork (\n      e => res.status (e.status).json ({msg: e.message}),\n      obj => res.json (obj)\n    )\n})\n\nexport default router\n","// Import dependencies\nimport express from 'express'\nimport {env as flutureEnv} from 'fluture-sanctuary-types'\nimport {create, env} from 'sanctuary'\n\nimport {\n  checkUnique,\n  genToken,\n  saltAndHash,\n  saveOr,\n} from '../../utils/helpers'\n\nconst router = express.Router ()   // Initialize router\nconst S = create ({// Initialize type environment\n  checkTypes: true,\n  env: env.concat (flutureEnv),\n})\n\nimport User from '../../models/Users'\n\n// @route POST /api/users\n// @desc Register new users\n// @access Public\nrouter.post ('/', (req, res) => {\n  const {name, email, password} = req.body\n\n  if (!name || !email || !password) {\n    res.status (400).json ({msg: 'Please enter all fields'})\n  }\n\n  const eventualToken = checkUnique ({password}) ({email})\n    .map (S.prop ('password'))\n    .chain (saltAndHash (13))\n    .map (pw => new User ({name, email, password: pw}))\n    .chain (saveOr ({status: 400, message: 'Error saving user'}))\n    .chain (r => genToken (S.prop ('id') (r))\n      .bimap (\n        S.K ({status: 400, message: 'Error signing token'}),\n        token => ({\n          token,\n          user: {name: r.name, email: r.email, password: r.password},\n        }))\n    )\n\n  eventualToken\n    .fork (\n      e => res.status (e.status).json ({msg: e.message}),\n      obj => res.json (obj)\n    )\n})\n\nexport default router\n","import express from 'express'\nimport jwt from 'jsonwebtoken'\nimport * as Future from 'fluture'\nimport {create, env} from 'sanctuary'\nimport {env as flutureEnv} from 'fluture-sanctuary-types'\nimport {\n  err,\n  getToken,\n  getUser,\n  maybeToFuture,\n} from '../../utils/helpers'\nimport User from '../../models/Users'\n\nconst S = create ({\n  checkTypes: true,\n  env: env.concat (flutureEnv),\n})\n\nconst router = express.Router ()\n\n//    verify :: String -> String -> Object\nconst verify = secret => token => Future.encaseN2 (jwt.verify) (token) (secret)\n\n//           verifyToken :: String -> Object\nexport const verifyToken = verify (process.env.JWT_SECRET)\n\n//    needsVerifyOr :: Object -> Object -> Future Object Object\nconst needsVerifyOr = err => user =>\n   S.prop ('isVerified') (user) ? Future.reject (err) :\n    /* otherwise */               Future.of (user)\n\n// @route   GET /api/verify/:token\n// @desc    Display verificationg form\n// @access  Public\nrouter.get ('/:token', (req, res) => {\n  // Get token\n  // Send token to hidden input client side\n  const {token} = req.params\n  res.json ({token})\n\n})\n\n// @route   POST /api/verify\n// @desc    Verify token and email\n// @access  Public\nrouter.post ('/', (req, res) => {\n  // Change verification status to true and resave user\n  const noTokenErr = err\n    (400)\n    ('We were unable to find a valid token. Your token may have expired.')\n  const noUserErr = err\n    (400)\n    ('We were unable to find a user for this token.')\n  const beenVerifiedErr = err\n    (400)\n    ('This user has already been verified')\n\n  // Validate that token and email provided match\n  const {token, email} = req.body\n\n  // Token in db || 'token not found, it may have expired'\n  const futToken = getToken ({token})\n  .chain (maybeToFuture (noTokenErr))\n\n  // Find assoc user in db || 'User not found for this token'\n  // Then\n  // Check if user is verified || 'This user is already verified'\n  const futUser = futToken\n  .chain (token => getUser ({_id: token.userId, email}))\n  .chain (maybeToFuture (noUserErr))\n  .chain (needsVerifyOr (beenVerifiedErr))\n\n  futUser\n  .fork (\n    e => res.status (e.status).json ({msg: e.message}),\n    // If there were no errors, set isVerified to true and save\n    user => {\n      user.isVerified = true\n      user.save ()\n      res.json ({msg: 'Your account has been verified, please login.'})\n    }\n  )\n})\n\nexport default router\n","import mongoose from 'mongoose'\nconst Schema = mongoose.Schema\n\nconst PlanetSchema = new Schema ({\n  name: {\n    type: String,\n    required: true,\n  },\n})\n\nconst Planet = mongoose.model ('planet', PlanetSchema)\n\nexport default Planet\n","// Import modules\nimport express from 'express'\nconst router = express.Router ()\n\n// Import models\nimport Planet from '../../models/Planets'\n\n// @route   GET /api/planets\n// @desc    Get planets from db\n// @access  Public\nrouter.get ('/', (req, res) => {\n  Planet.find ().exec ((err, planets) => {\n    if (err) {\n      res.end (err)\n    }\n    res.json (planets)\n  })\n})\n\n// @route    POST /api/planets\n// @desc     Add new planet\n// @accesss  Public\nrouter.post ('/', (req, res) => {\n  const newPlanet = new Planet ({\n    name: req.body.name,\n  })\n\n  newPlanet.save ().then (planet => res.json (planet))\n})\n\n// @route   DELETE /api/planets/:id\n// @desc    Delete a planet\n// @access  Public\nrouter.delete ('/:id', (req, res) => {\n  Planet\n    .deleteOne ({_id: req.params.id})\n    .then (res => res.json ({success: true}))\n    .catch (err => res.json ({success: false}))\n})\n\nexport default router\n","import mongoose from 'mongoose'\nconst Schema = mongoose.Schema\n\nconst PostSchema = new Schema ({\n  authorId: {\n    type: String,\n    required: true,\n  },\n  title: {\n    type: String,\n    required: true,\n  },\n  body: {\n    type: String,\n    maxlength: 5000,\n    required: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n})\n\nconst Post = mongoose.model ('post', PostSchema)\n\nexport default Post\n","import express from 'express'\nconst router = express.Router ()\n\nimport {saveOr} from '../../utils/helpers'\n\nimport Post from '../../models/Posts'\n\n// Import middlware\nimport auth from '../../middleware/auth'\n\n// @route POST /api/posts\n// @desc  Create new post\n// @access Private\nrouter.post ('/', auth, (req, res) => {\n  const {title, body} = req.body\n  const saveError = {status: 400, message: 'Error saving post'}\n  const authorId = req.user.id\n  const newPost = new Post ({title, body, authorId})\n\n  // Save new post\n  const futSave = saveOr (saveError) (newPost)\n\n  futSave\n  .fork (\n    e => res.status (e.status).json ({msg: e.message}),\n    res.json\n  )\n})\n\n// @route   GET /api/posts/user\n// @desc    Get array of posts by user\n// @access  Private\nrouter.get ('/user', auth, (req, res) => {\n  Post.find ({authorId: req.user.id})\n    .exec ((err, returnedPosts) => {\n      if (err) {\n        res.end (err)\n      }\n      res.json (returnedPosts)\n    })\n})\n\n// @route   DELETE /api/posts/:id\n// @desc    Delete post\n// @access  Private\nrouter.delete ('/:id', auth, (req, res) => {\n  Post\n    .deleteOne ({_id: req.params.id})\n    .then (res => res.json ({success: true}))\n    .catch (err => res.json ({success: false}))\n})\n\n// @route   PATCH /api/posts/edit\n// @desc    Edit post\n// @access  Public\nrouter.patch ('/edit', auth, (req, res) => {\n  Post\n    .findByIdAndUpdate (\n      req.body._id,\n      {title: req.body.title, body: req.body.body},\n      {new: true}\n    )\n    .then (updatedPost => {\n      res.json (updatedPost)\n    })\n    .catch (err => res.status (400).json ({msg: 'Error updating post'}))\n})\n\nexport default router\n","// Import modules\nimport express from 'express'\nimport mongoose from 'mongoose'\nimport path from 'path'\nimport Future from 'fluture'\nimport {create, env} from 'sanctuary'\nimport {env as flutureEnv} from 'fluture-sanctuary-types'\nimport {maybeToFuture, toMaybe} from './utils/helpers'\n\nconst S = create ({checkTypes: true, env: env.concat (flutureEnv)})\n\n// Import routes\nimport authRouter from './routes/api/auth'\nimport planetsRouter from './routes/api/planets'\nimport postRouter from './routes/api/posts'\nimport usersRouter from './routes/api/users'\nimport verifyRouter from './routes/api/verify'\n\nconst port = process.env.PORT || 5000\n\nconst isMain = main => S.isJust (toMaybe (main))\n\n// initialize server\nconst app = express ()\n\n// Connect to db\nexport const uri = process.env.MONGODB_URI\n\nexport const dbOptions = {\n  'useNewUrlParser': true,\n  'useCreateIndex': true,\n  'useFindAndModify': false,\n  'autoIndex': false,\n}\n\nconst eventualConnection = Future.encaseN2 (mongoose.connect)\n\nconst startDBIfCommandline = uri =>\n  options =>\n  main => maybeToFuture ('Testing') (toMaybe (main))\n    .chain (_ => eventualConnection (uri) (options))\n\nstartDBIfCommandline (uri) (dbOptions) (process.mainModule)\n  .fork (\n    console.error,\n    _ => console.log ('>>> 🛢  DB connected...')\n  )\n\napp.use (express.json ())\n\napp.get ('/config.js', (req, res) => {\n  res.send (\"const NASA_API_KEY='\" + process.env.NASA_API_KEY + \"'\")\n})\n\n// Add api routers\napp.use ('/api/users', usersRouter)\napp.use ('/api/planets', planetsRouter)\napp.use ('/api/auth', authRouter)\napp.use ('/api/verify', verifyRouter)\napp.use ('/api/posts', postRouter)\n\napp.use (express.static ('client/dist'))\n\napp.get ('*', (req, res) => {\n  res.sendFile (path.resolve (__dirname, 'client', 'dist', 'index.html'))\n})\n\n// Listen on port\nconst startServerIfCommandline = main => app => port =>\n  isMain (main) ?  S.Just (\n      app.listen (port, _ => console.log (`>>> 📡 Listening on ${port}...`))) :\n    /* otherwise */ S.Nothing\n\nstartServerIfCommandline (process.mainModule) (app) (port)\n"],"sourceRoot":""}