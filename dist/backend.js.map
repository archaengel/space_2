{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fluture\"","webpack:///external \"express\"","webpack:///external \"sanctuary\"","webpack:///external \"bcryptjs\"","webpack:///external \"mongoose\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"fluture-sanctuary-types\"","webpack:///./models/Users.js","webpack:///./routes/api/users.js","webpack:///./middleware/auth.js","webpack:///external \"path\"","webpack:///./routes/api/planets.js","webpack:///./routes/api/auth.js","webpack:///./routes/api/posts.js","webpack:///./server.js","webpack:///external \"nodemailer\"","webpack:///./models/Planets.js","webpack:///./models/Posts.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","mongoose","UserSchema","Schema","type","String","required","email","unique","password","register_date","default","Date","now","User","model","router","express","Router","S","checkTypes","env","concat","flutureEnv","toMaybe","x","Nothing","Just","eitherToFuture","either","Future","reject","of","getUser","params","rej","res","findOne","then","compose","checkUnique","user","chain","maybe","Right","_","Left","status","message","eitherNewUser","salt","encaseN","bcrypt","genSalt","hash","encaseN2","save","signToken","encaseN3","jwt","sign","post","req","body","json","msg","map","prop","pw","id","process","JWT_SECRET","expiresIn","token","fork","e","obj","next","header","decoded","verify","err","Planet","find","exec","planets","end","planet","deleteOne","_id","success","encaseP2","compare","isMatch","auth","findById","select","returnedUser","Post","title","authorId","savePost","returnedPosts","patch","findByIdAndUpdate","new","updatedPost","port","PORT","app","uri","MONGODB_URI","dbOptions","eventualConnection","connect","options","main","maybeToEither","startDBIfCommandline","mainModule","console","error","log","use","send","NASA_API_KEY","usersRouter","planetsRouter","authRouter","postRouter","sendFile","path","resolve","__dirname","isJust","isMain","listen","startServerIfCommandline","PlanetSchema","PostSchema","maxlength","createdAt"],"mappings":"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","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = require(\"fluture\");","module.exports = require(\"express\");","module.exports = require(\"sanctuary\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"mongoose\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"fluture-sanctuary-types\");","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet UserSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  register_date: {\n    type: String,\n    default: Date.now\n  }\n})\n\nconst User = mongoose.model('user', UserSchema)\n\nexport default User\n","// Import dependencies\nimport express from 'express'\nimport bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\nimport nodemailer from 'nodemailer'\nimport Future from 'fluture'\nimport { env as flutureEnv } from 'fluture-sanctuary-types'   // Type defs for Fluture\nimport { create, env } from 'sanctuary'\n\nconst router = express.Router()                             // Initialize router\nconst S = create({                                          // Initialize type environment\n  checkTypes: true,\n  env: env.concat(flutureEnv)\n})\n\nimport User from '../../models/Users'\n\n// toMaybe :: a -> Maybe a\nexport const toMaybe = (x) => x === null || x === undefined ? S.Nothing : S.Just (x)\n\n// eitherToFuture :: Either e r -> Future e r\nexport const eitherToFuture = S.either (Future.reject) (Future.of)\n\n// getModel :: String -> {} -> Future Error (Maybe {})\nexport const getModel = (model) => (params) => Future ((rej, res) => {\n  model\n    .findOne({ ...params })\n    .then (S.compose (res) (toMaybe))\n    .catch(rej)\n})\n\n// getUser :: {} -> Future Error (Maybe {})\nexport const getUser = getModel (User)\n\n// eitherNewUser :: {} -> Maybe {} -> Either String {}\nconst eitherNewUser = (user) => S.maybe\n  (S.Right ({...user}))\n  (_ => S.Left ({\n    status: 400,\n    message: 'User already exists'\n  }))\n\n// checkUnique :: {} -> String -> Future Error {}\nexport const checkUnique = (user) => S.compose \n  (S.chain (S.compose (eitherToFuture) (eitherNewUser (user))))\n  (getUser)\n\n// salt :: Number -> Future Error String\nconst salt = Future.encaseN (bcrypt.genSalt)\n\n// hash :: String -> String -> Future Error String\nconst hash = Future.encaseN2 (bcrypt.hash)\n\n// saltAndHash :: Number -> String -> Future Error String\nexport const saltAndHash = (n) => (pw) => salt (n) .chain (hash (pw))\n\n// save :: {} -> Future Error {}\nexport const save = (user) => Future ((rej, res) => {\n  user.save().then(res).catch(rej)\n})\n\n// signToken :: {} -> String -> {} | nil -> Future Error String\nexport const signToken = Future.encaseN3 (jwt.sign)\n\n// @route POST /api/users\n// @desc Register new users\n// @access Public\nrouter.post('/', (req, res) => {\n  const { name, email, password } = req.body\n\n  if (!name || !email || !password) {\n    res.status(400).json({ msg: 'Please enter all fields' })\n  }\n\n  const eventualToken = checkUnique ({ password }) ({ email })\n    .map (S.prop ('password'))\n    .chain (saltAndHash (13))\n    .map (pw => new User({ name, email, password: pw }))\n    .chain (save)\n    .chain (r => signToken ({ id: r.id }) (process.env.JWT_SECRET) ({ expiresIn: 3600 })\n      .map (token => ({ token, user: { name: r.name, email: r.email, password: r.password } }))\n    )\n\n  eventualToken\n    .fork(\n      e => res.status(e.status).json({ msg: e.message }),\n      obj => res.json(obj)\n    )\n})\n\nexport default router\n","const jwt = require('jsonwebtoken')\n\nconst auth = (req, res, next) => {\n  const token = req.header('x-auth-token')\n\n  if (!token) return res.status(401).json({ msg: 'No token, authorization denied' })\n\n  try {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET)\n    req.user = decoded\n    next()\n  } catch (err) {\n    res.status(400).json({ msg: 'Token is not valid' })\n  }\n}\n\nmodule.exports = auth\n","module.exports = require(\"path\");","// Import modules\nconst express = require('express')\nconst router = express.Router()\nconst mongoose = require('mongoose')\n\n// Import models\nconst Planet = require('../../models/Planets')\n\n// @route   GET /api/planets\n// @desc    Get planets from db\n// @access  Public\nrouter.get('/', (req, res) => {\n  Planet.find().exec((err, planets) => {\n    if (err) {\n      res.end(err)\n    }\n    res.json(planets)\n  })\n})\n\n// @route    POST /api/planets\n// @desc     Add new planet\n// @accesss  Public\nrouter.post('/', (req, res) => {\n  const newPlanet = new Planet({\n    name: req.body.name\n  })\n\n  newPlanet.save().then(planet => res.json(planet))\n})\n\n// @route   DELETE /api/planets/:id\n// @desc    Delete a planet\n// @access  Public\nrouter.delete('/:id', (req, res) => {\n  Planet\n    .deleteOne({ _id: req.params.id })\n    .then(res => res.json({success: true}))\n    .catch(err => res.json({success: false}))\n})\n\nmodule.exports = router\n","import express from 'express'\nconst router = express.Router()\nimport bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\nimport Future from 'fluture'\nimport { env as flutureEnv } from 'fluture-sanctuary-types'\nimport { create, env } from 'sanctuary'\n\nconst S = create({ checkTypes: true, env: env.concat(flutureEnv) })\n\nimport auth from '../../middleware/auth'\n\nimport User from '../../models/Users'\n\n// compare :: String -> String -> Future Error Boolean\nexport const compare = Future.encaseP2 (bcrypt.compare)\n\n// @route  POST /api/auth\n// @desc   Authorize user\n// @access Public\nrouter.post('/', (req, res) => {\n  const { email, password } = req.body\n\n  // Simple validation\n  if (!email || !password) {\n    res.status(400).json({ msg: 'Please enter all fields' })\n  }\n\n  // Check for existing user\n  User.findOne({ email })\n    .then(user => {\n      if (!user) return res.status(400).json({ msg: 'User does not exist' })\n\n      // Validate password\n      bcrypt.compare(password, user.password)\n        .then(isMatch => {\n          if (!isMatch) return res.status(401).json({ msg: 'Invalid credentials' })\n\n          jwt.sign(\n            { id: user.id },\n            process.env.JWT_SECRET,\n            { expiresIn: 3600 },\n            (err, token) => {\n              if (err) throw err\n              res.json({\n                token,\n                user: {\n                  id: user.id,\n                  name: user.name,\n                  email: user.email\n                }\n              })\n            }\n          )\n        })\n    })\n})\n\n// @route  GET /api/auth/user\n// @desc   Get user data\n// @access Private\nrouter.get('/user', auth, (req, res) => {\n  User.findById(req.user.id)\n    .select('-password')\n    .then(returnedUser => res.json(returnedUser))\n})\n\nexport default router\n","const express = require('express')\nconst router = express.Router()\n\nconst Post = require('../../models/Posts')\n\n// Import middlware\nconst auth = require('../../middleware/auth')\n\n// @route POST /api/posts\n// @desc  Create new post\n// @access Private\nrouter.post('/', auth, (req, res) => {\n  const {\n    title,\n    body,\n  } = req.body\n\n  const authorId = req.user.id\n\n  const newPost = new Post({\n    title,\n    body,\n    authorId\n  })\n\n  // Save new post\n  newPost\n    .save()\n    .then( savePost => {\n      res.json(savePost)\n    })\n    .catch( err => {\n      res.status(400).json({ msg: 'Error saving post' })\n    })\n})\n\n// @route   GET /api/posts/user\n// @desc    Get array of posts by user\n// @access  Private\nrouter.get('/user', auth, (req, res) => {\n  Post.find({ authorId: req.user.id })\n    .exec((err, returnedPosts) => {\n      if (err) {\n        res.end(err)\n      }\n      res.json(returnedPosts)\n    })\n})\n\n// @route   DELETE /api/posts/:id\n// @desc    Delete post\n// @access  Private\nrouter.delete('/:id', auth, (req, res) => {\n  Post\n    .deleteOne({ _id: req.params.id })\n    .then(res => res.json({ success: true }))\n    .catch(err => res.json({ success: false }))\n})\n\n// @route   PATCH /api/posts/edit\n// @desc    Edit post\n// @access  Public\nrouter.patch('/edit', auth, (req, res) => {\n  Post\n    .findByIdAndUpdate(\n      req.body._id,\n      { title: req.body.title, body: req.body.body },\n      { new: true }\n    )\n    .then(updatedPost => {\n      res.json(updatedPost)\n    })\n    .catch(err => res.status(400).json({ msg: 'Error updating post' }))\n})\n\nmodule.exports = router\n","// Import modules\nimport express from 'express'\nimport mongoose from 'mongoose'\nimport bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\nimport path from 'path'\nimport Future from 'fluture'\nimport { create, env } from 'sanctuary'\nimport { env as flutureEnv } from 'fluture-sanctuary-types'\n\nconst S = create({ checkTypes: true, env: env.concat(flutureEnv) })\n\n// Import routes\nimport usersRouter, { toMaybe, eitherToFuture } from './routes/api/users'\nimport planetsRouter from './routes/api/planets'\nimport authRouter from './routes/api/auth'\nimport postRouter from './routes/api/posts'\n\nconst port = process.env.PORT || 5000\n\nconst isMain = (main) => S.isJust (toMaybe (main)) \n\n// initialize server\nconst app = express()\n\n// Connect to db\nexport const uri = process.env.MONGODB_URI\n\nexport const dbOptions = {\n  \"useNewUrlParser\": true,\n  \"useCreateIndex\": true,\n  \"useFindAndModify\": false\n}\n\nconst eventualConnection = Future.encaseN2 (mongoose.connect)\n\nconst startDBIfCommandline = (uri) =>\n  (options) =>\n  (main) => S.compose (eitherToFuture) (S.maybeToEither ('Testing')) (toMaybe (main))\n    .chain (_ => eventualConnection (uri) (options))\n\nstartDBIfCommandline (uri) (dbOptions) (process.mainModule)\n  .fork(\n    console.error,\n    _ => console.log('>>> 🛢  DB connected...')\n  )\n\napp.use(express.json())\n\napp.get('/config.js', (req, res) => {\n  res.send(\"const NASA_API_KEY='\"+process.env.NASA_API_KEY+\"'\")\n})\n\n// Add api routers\napp.use('/api/users', usersRouter)\napp.use('/api/planets', planetsRouter)\napp.use('/api/auth', authRouter)\napp.use('/api/posts', postRouter)\n\napp.use(express.static('client/dist'))\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, 'client', 'dist', 'index.html'))\n})\n\n// Listen on port\nconst startServerIfCommandline = (main) =>\n  (app) =>\n  (port) => isMain (main) ?\n    S.Just (app.listen(port, () => console.log (`>>> 📡 Listening on ${port}...`))) :\n    S.Nothing\n\nstartServerIfCommandline (process.mainModule) (app) (port)\n\n","module.exports = require(\"nodemailer\");","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet PlanetSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  }\n})\n\nconst Planet = mongoose.model('planet', PlanetSchema)\n\nexport default Planet\n","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet PostSchema = new Schema({\n  authorId: {\n    type: String,\n    required: true\n  },\n  title: {\n    type: String,\n    required: true,\n  },\n  body: {\n    type: String,\n    maxlength: 5000,\n    required: true\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n})\n\nconst Post = mongoose.model('post', PostSchema)\n\nexport default Post\n"],"sourceRoot":""}