{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"express\"","webpack:///external \"mongoose\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"bcryptjs\"","webpack:///./models/Users.js","webpack:///./middleware/auth.js","webpack:///./server.js","webpack:///external \"path\"","webpack:///./routes/api/users.js","webpack:///external \"nodemailer\"","webpack:///external \"fluture\"","webpack:///external \"fluture-sanctuary-types\"","webpack:///external \"sanctuary\"","webpack:///./routes/api/planets.js","webpack:///./models/Planets.js","webpack:///./routes/api/auth.js","webpack:///./routes/api/posts.js","webpack:///./models/Posts.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","mongoose","UserSchema","Schema","type","String","required","email","unique","password","register_date","default","Date","now","User","model","jwt","req","res","next","token","header","status","json","msg","decoded","verify","process","env","JWT_SECRET","user","err","express","app","path","usersRouter","planetsRouter","authRouter","postRouter","uri","MONGODB_URI","dbOptions","connect","then","console","log","catch","message","use","send","NASA_API_KEY","static","sendFile","resolve","__dirname","listen","PORT","router","Router","bcrypt","Future","flutureEnv","S","checkTypes","concat","toMaybe","x","Nothing","Just","eitherToFuture","either","reject","of","getUser","params","rej","findOne","compose","getModel","checkUnique","chain","maybe","Right","_","Left","eitherNewUser","salt","encaseN","genSalt","hash","encaseN2","save","signToken","encaseN3","sign","post","body","map","prop","pw","saltAndHash","id","expiresIn","fork","e","obj","Planet","find","exec","planets","end","planet","delete","deleteOne","_id","success","PlanetSchema","auth","compare","isMatch","findById","select","returnedUser","Post","title","authorId","savePost","returnedPosts","patch","findByIdAndUpdate","new","updatedPost","PostSchema","maxlength","createdAt"],"mappings":"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","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"bcryptjs\");","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet UserSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  register_date: {\n    type: String,\n    default: Date.now\n  }\n})\n\nconst User = mongoose.model('user', UserSchema)\n\nmodule.exports = User\n","const jwt = require('jsonwebtoken')\n\nconst auth = (req, res, next) => {\n  const token = req.header('x-auth-token')\n\n  if (!token) return res.status(401).json({ msg: 'No token, authorization denied' })\n\n  try {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET)\n    req.user = decoded\n    next()\n  } catch (err) {\n    res.status(400).json({ msg: 'Token is not valid' })\n  }\n}\n\nmodule.exports = auth\n","// Import modules\nconst express = require('express')\nconst app = express()\nconst mongoose = require('mongoose')\nconst bcrypt = require('bcryptjs')\nconst jwt = require('jsonwebtoken')\nconst path = require('path')\n\n// Import routes\nconst usersRouter = require('./routes/api/users')\nconst planetsRouter = require('./routes/api/planets')\nconst authRouter = require('./routes/api/auth')\nconst postRouter = require('./routes/api/posts')\n\n// Connect to db\nexport const uri = process.env.MONGODB_URI\n\nexport const dbOptions = {\n  \"useNewUrlParser\": true,\n  \"useCreateIndex\": true,\n  \"useFindAndModify\": false\n}\n\nconst db = mongoose.connect(uri, dbOptions)\n  .then(() => console.log('db connected'))\n  .catch((err) => console.log(err.message))\n\n\napp.use(express.json())\n\napp.get('/config.js', (req, res) => {\n  res.send(\"const NASA_API_KEY='\"+process.env.NASA_API_KEY+\"'\")\n})\n\n// Add api routers\napp.use('/api/users', usersRouter)\napp.use('/api/planets', planetsRouter)\napp.use('/api/auth', authRouter)\napp.use('/api/posts', postRouter)\n\napp.use(express.static('client/dist'))\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, 'client', 'dist', 'index.html'))\n})\n\n// Listen on port\napp.listen(process.env.PORT || 5000, () => {\n  console.log(`>>> Listening on ${ process.env.PORT || 5000}...`)\n})\n","module.exports = require(\"path\");","const express = require('express')\nconst router = express.Router()\nconst bcrypt = require('bcryptjs')\nconst jwt = require('jsonwebtoken')\nconst nodemailer = require('nodemailer')\nconst Future = require('fluture')\nconst { env: flutureEnv } = require('fluture-sanctuary-types')\nconst { create, env } = require('sanctuary')\nconst S = create({ checkTypes: true, env: env.concat(flutureEnv) })\n\nconst User = require('../../models/Users')\n\n// toMaybe :: a -> Maybe a\nconst toMaybe = (x) => x === null || x === undefined ? S.Nothing : S.Just (x)\n\n// eitherToFuture :: Either e r -> Future e r\nconst eitherToFuture = S.either (Future.reject) (Future.of)\n\n// getModel :: String -> {} -> Future Error (Maybe {})\nconst getModel = (model) => (params) => Future ((rej, res) => {\n  model\n    .findOne({ ...params })\n    .then (S.compose (res) (toMaybe))\n    .catch(rej)\n})\n\n// getUser :: {} -> Future Error (Maybe {})\nconst getUser = getModel (User)\n\n// eitherNewUser :: {} -> Maybe {} -> Either String {}\nconst eitherNewUser = (user) => S.maybe\n  (S.Right ({...user}))\n  (_ => S.Left ({\n    status: 400,\n    message: 'User already exists'\n  }))\n\n// checkUnique :: {} -> String -> Future Error {}\nconst checkUnique = (user) => S.compose \n  (S.chain (S.compose (eitherToFuture) (eitherNewUser (user))))\n  (getUser)\n\n// salt :: Number -> Future Error String\nconst salt = Future.encaseN (bcrypt.genSalt)\n\n// hash :: String -> String -> Future Error String\nconst hash = Future.encaseN2 (bcrypt.hash)\n\n// saltAndHash :: Number -> String -> Future Error String\nconst saltAndHash = (n) => (pw) => salt (n) .chain (hash (pw))\n\n// save :: {} -> Future Error {}\nconst save = (user) => Future ((rej, res) => {\n  user.save().then(res).catch(rej)\n})\n\n// signToken :: {} -> String -> {} | nil -> Future Error String\nconst signToken = Future.encaseN3 (jwt.sign)\n\n// @route POST /api/users\n// @desc Register new users\n// @access Public\nrouter.post('/', (req, res) => {\n  const { name, email, password } = req.body\n\n  if (!name || !email || !password) {\n    res.status(400).json({ msg: 'Please enter all fields' })\n  }\n\n  const eventualToken = checkUnique ({ password }) ({ email })\n    .map (S.prop ('password'))\n    .chain (saltAndHash (13))\n    .map (pw => new User({ name, email, password: pw }))\n    .chain (save)\n    .chain (r => signToken ({ id: r.id }) (process.env.JWT_SECRET) ({ expiresIn: 3600 })\n      .map (token => ({ token, user: { name: r.name, email: r.email, password: r.password } }))\n    )\n\n  eventualToken\n    .fork(\n      e => res.status(e.status).json({ msg: e.message }),\n      obj => res.json(obj)\n    )\n})\n\nmodule.exports = router\n","module.exports = require(\"nodemailer\");","module.exports = require(\"fluture\");","module.exports = require(\"fluture-sanctuary-types\");","module.exports = require(\"sanctuary\");","// Import modules\nconst express = require('express')\nconst router = express.Router()\nconst mongoose = require('mongoose')\n\n// Import models\nconst Planet = require('../../models/Planets')\n\n// @route   GET /api/planets\n// @desc    Get planets from db\n// @access  Public\nrouter.get('/', (req, res) => {\n  Planet.find().exec((err, planets) => {\n    if (err) {\n      res.end(err)\n    }\n    res.json(planets)\n  })\n})\n\n// @route    POST /api/planets\n// @desc     Add new planet\n// @accesss  Public\nrouter.post('/', (req, res) => {\n  const newPlanet = new Planet({\n    name: req.body.name\n  })\n\n  newPlanet.save().then(planet => res.json(planet))\n})\n\n// @route   DELETE /api/planets/:id\n// @desc    Delete a planet\n// @access  Public\nrouter.delete('/:id', (req, res) => {\n  Planet\n    .deleteOne({ _id: req.params.id })\n    .then(res => res.json({success: true}))\n    .catch(err => res.json({success: false}))\n})\n\nmodule.exports = router\n","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet PlanetSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  }\n})\n\nmodule.exports = User = mongoose.model('planet', PlanetSchema)\n","const express = require('express')\nconst router = express.Router()\nconst bcrypt = require('bcryptjs')\nconst jwt = require('jsonwebtoken')\n\nconst auth = require('../../middleware/auth')\n\nconst User = require('../../models/Users')\n\n// @route  POST /api/auth\n// @desc   Authorize user\n// @access Public\nrouter.post('/', (req, res) => {\n  const { email, password } = req.body\n\n  // Simple validation\n  if (!email || !password) {\n    res.status(400).json({ msg: 'Please enter all fields' })\n  }\n\n  // Check for existing user\n  User.findOne({ email })\n    .then(user => {\n      if (!user) return res.status(400).json({ msg: 'User does not exist' })\n\n      // Validate password\n      bcrypt.compare(password, user.password)\n        .then(isMatch => {\n          if (!isMatch) return res.status(401).json({ msg: 'Invalid credentials' })\n\n          jwt.sign(\n            { id: user.id },\n            process.env.JWT_SECRET,\n            { expiresIn: 3600 },\n            (err, token) => {\n              if (err) throw err\n              res.json({\n                token,\n                user: {\n                  id: user.id,\n                  name: user.name,\n                  email: user.email\n                }\n              })\n            }\n          )\n        })\n    })\n})\n\n// @route  GET /api/auth/user\n// @desc   Get user data\n// @access Private\nrouter.get('/user', auth, (req, res) => {\n  User.findById(req.user.id)\n    .select('-password')\n    .then(returnedUser => res.json(returnedUser))\n})\n\nmodule.exports = router\n","const express = require('express')\nconst router = express.Router()\n\nconst Post = require('../../models/Posts')\n\n// Import middlware\nconst auth = require('../../middleware/auth')\n\n// @route POST /api/posts\n// @desc  Create new post\n// @access Private\nrouter.post('/', auth, (req, res) => {\n  const {\n    title,\n    body,\n  } = req.body\n\n  const authorId = req.user.id\n\n  const newPost = new Post({\n    title,\n    body,\n    authorId\n  })\n\n  // Save new post\n  newPost\n    .save()\n    .then( savePost => {\n      res.json(savePost)\n    })\n    .catch( err => {\n      res.status(400).json({ msg: 'Error saving post' })\n    })\n})\n\n// @route   GET /api/posts/user\n// @desc    Get array of posts by user\n// @access  Private\nrouter.get('/user', auth, (req, res) => {\n  Post.find({ authorId: req.user.id })\n    .exec((err, returnedPosts) => {\n      if (err) {\n        res.end(err)\n      }\n      res.json(returnedPosts)\n    })\n})\n\n// @route   DELETE /api/posts/:id\n// @desc    Delete post\n// @access  Private\nrouter.delete('/:id', auth, (req, res) => {\n  Post\n    .deleteOne({ _id: req.params.id })\n    .then(res => res.json({ success: true }))\n    .catch(err => res.json({ success: false }))\n})\n\n// @route   PATCH /api/posts/edit\n// @desc    Edit post\n// @access  Public\nrouter.patch('/edit', auth, (req, res) => {\n  Post\n    .findByIdAndUpdate(\n      req.body._id,\n      { title: req.body.title, body: req.body.body },\n      { new: true }\n    )\n    .then(updatedPost => {\n      res.json(updatedPost)\n    })\n    .catch(err => res.status(400).json({ msg: 'Error updating post' }))\n})\n\nmodule.exports = router\n","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet PostSchema = new Schema({\n  authorId: {\n    type: String,\n    required: true\n  },\n  title: {\n    type: String,\n    required: true,\n  },\n  body: {\n    type: String,\n    maxlength: 5000,\n    required: true\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n})\n\nmodule.exports = Post = mongoose.model('post', PostSchema)\n"],"sourceRoot":""}