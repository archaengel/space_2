{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fluture\"","webpack:///external \"express\"","webpack:///./routes/api/users.js","webpack:///external \"sanctuary\"","webpack:///./middleware/auth.js","webpack:///external \"mongoose\"","webpack:///external \"bcryptjs\"","webpack:///external \"fluture-sanctuary-types\"","webpack:///external \"jsonwebtoken\"","webpack:///./models/Users.js","webpack:///external \"path\"","webpack:///./routes/api/auth.js","webpack:///./models/Planets.js","webpack:///./routes/api/planets.js","webpack:///./models/Posts.js","webpack:///./routes/api/posts.js","webpack:///./server.js","webpack:///external \"nodemailer\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","model","router","express","Router","S","checkTypes","env","concat","flutureEnv","toMaybe","x","Nothing","Just","eitherToFuture","either","Future","reject","of","getUser","User","params","rej","res","findOne","then","compose","checkUnique","user","chain","maybe","Right","_","Left","status","message","eitherNewUser","salt","encaseN","bcrypt","genSalt","hash","encaseN2","save","signToken","encaseN3","jwt","sign","post","req","body","email","password","json","msg","map","prop","pw","id","process","JWT_SECRET","expiresIn","bimap","token","fork","e","obj","next","header","decoded","verify","err","mongoose","UserSchema","Schema","type","String","required","unique","register_date","default","Date","now","compare","unhashed","maybeToEither","_id","auth","findById","select","PlanetSchema","Planet","find","exec","planets","end","planet","deleteOne","success","PostSchema","authorId","title","maxlength","createdAt","Post","savePost","returnedPosts","patch","findByIdAndUpdate","new","updatedPost","port","PORT","app","uri","MONGODB_URI","dbOptions","eventualConnection","connect","options","main","startDBIfCommandline","mainModule","console","error","log","use","send","NASA_API_KEY","usersRouter","planetsRouter","authRouter","postRouter","sendFile","path","resolve","__dirname","isJust","isMain","listen","startServerIfCommandline"],"mappings":"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","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = require(\"fluture\");","module.exports = require(\"express\");","// Import dependencies\nimport express from 'express'\nimport bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\nimport nodemailer from 'nodemailer'\nimport Future from 'fluture'\nimport { env as flutureEnv } from 'fluture-sanctuary-types'   // Type defs for Fluture\nimport { create, env } from 'sanctuary'\n\nconst router = express.Router()                             // Initialize router\nconst S = create({                                          // Initialize type environment\n  checkTypes: true,\n  env: env.concat(flutureEnv)\n})\n\nimport User from '../../models/Users'\n\n// toMaybe :: a -> Maybe a\nexport const toMaybe = (x) => x === null || x === undefined ? S.Nothing : S.Just (x)\n\n// eitherToFuture :: Either e r -> Future e r\nexport const eitherToFuture = S.either (Future.reject) (Future.of)\n\n// getModel :: String -> {} -> Future Error (Maybe {})\nexport const getModel = (model) => (params) => Future ((rej, res) => {\n  model\n    .findOne({ ...params })\n    .then (S.compose (res) (toMaybe))\n    .catch(rej)\n})\n\n// getUser :: {} -> Future Error (Maybe {})\nexport const getUser = getModel (User)\n\n// eitherNewUser :: {} -> Maybe {} -> Either String {}\nconst eitherNewUser = (user) => S.maybe\n  (S.Right ({...user}))\n  (_ => S.Left ({\n    status: 400,\n    message: 'User already exists'\n  }))\n\n// checkUnique :: {} -> String -> Future Error {}\nexport const checkUnique = (user) => S.compose \n  (S.chain (S.compose (eitherToFuture) (eitherNewUser (user))))\n  (getUser)\n\n// salt :: Number -> Future Error String\nconst salt = Future.encaseN (bcrypt.genSalt)\n\n// hash :: String -> String -> Future Error String\nconst hash = Future.encaseN2 (bcrypt.hash)\n\n// saltAndHash :: Number -> String -> Future Error String\nexport const saltAndHash = (n) => (pw) => salt (n) .chain (hash (pw))\n\n// save :: {} -> Future Error {}\nexport const save = (user) => Future ((rej, res) => {\n  user.save().then(res).catch(rej)\n})\n\n// signToken :: {} -> String -> {} | nil -> Future Error String\nexport const signToken = Future.encaseN3 (jwt.sign)\n\n// @route POST /api/users\n// @desc Register new users\n// @access Public\nrouter.post('/', (req, res) => {\n  const { name, email, password } = req.body\n\n  if (!name || !email || !password) {\n    res.status(400).json({ msg: 'Please enter all fields' })\n  }\n\n  const eventualToken = checkUnique ({ password }) ({ email })\n    .map (S.prop ('password'))\n    .chain (saltAndHash (13))\n    .map (pw => new User({ name, email, password: pw }))\n    .chain (save)\n    .chain (r => signToken ({ id: r.id }) (process.env.JWT_SECRET) ({ expiresIn: 3600 })\n      .bimap (\n        _ => ({ status: 400, message: 'Error signing token' }),\n        token => ({ token, user: { name: r.name, email: r.email, password: r.password } }))\n    )\n\n  eventualToken\n    .fork(\n      e => res.status(e.status).json({ msg: e.message }),\n      obj => res.json(obj)\n    )\n})\n\nexport default router\n","module.exports = require(\"sanctuary\");","const jwt = require('jsonwebtoken')\n\nconst auth = (req, res, next) => {\n  const token = req.header('x-auth-token')\n\n  if (!token) return res.status(401).json({ msg: 'No token, authorization denied' })\n\n  try {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET)\n    req.user = decoded\n    next()\n  } catch (err) {\n    res.status(400).json({ msg: 'Token is not valid' })\n  }\n}\n\nmodule.exports = auth\n","module.exports = require(\"mongoose\");","module.exports = require(\"bcryptjs\");","module.exports = require(\"fluture-sanctuary-types\");","module.exports = require(\"jsonwebtoken\");","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet UserSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  register_date: {\n    type: String,\n    default: Date.now\n  }\n})\n\nconst User = mongoose.model('user', UserSchema)\n\nexport default User\n","module.exports = require(\"path\");","import express from 'express'\nconst router = express.Router()\nimport bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\nimport * as Future from 'fluture'\nimport { env as flutureEnv } from 'fluture-sanctuary-types'\nimport { create, env } from 'sanctuary'\nimport {\n  getUser,\n  eitherToFuture,\n  signToken\n} from './users'\n\nconst S = create({ checkTypes: true, env: env.concat(flutureEnv) })\n\nimport auth from '../../middleware/auth'\nimport User from '../../models/Users'\n\n// compare :: String -> String -> Future Error Boolean\nexport const compare = Future.encaseP2 (bcrypt.compare)\n\n// validateUser :: String -> {} -> Future Error {}\nexport const validateUser = (unhashed) => (user) => S.compose\n  (S.compose (S.chain (x => x ?\n    Future.of (user) :\n    Future.reject ({ status: 400, message: 'Invalid credentials' }))) (compare (unhashed)))\n  (S.prop ('password')) (user)\n\n// getUserById :: String -> Future (Maybe {})\nconst getUserById = (id) => Future.Future ((rej, res) => {\n  User\n    .findById ({ id })\n    .select ('-password')\n    .then (toMaybe (res))\n    .catch (rej)\n})\n\n// @route  POST /api/auth\n// @desc   Authorize user\n// @access Public\nrouter.post('/', (req, res) => {\n  const { email, password } = req.body\n\n  // Simple validation\n  if (!email || !password) {\n    res.status(400).json({ msg: 'Please enter all fields' })\n  }\n\n  const eventualResponse = getUser ({ email })\n    .chain (S.compose (eitherToFuture) (S.maybeToEither ({ status: 400, message: 'User does not exist' })))\n    .chain (validateUser (password))\n    .chain (r => signToken ({ id: r._id }) (process.env.JWT_SECRET) ({ expiresIn: 3600 })\n      .bimap (\n        _ => ({ status: 400, message: 'Error signing token' }),\n        token => ({ token, user: { id: r._id, name: r.name, email: r.email } })))\n\n  eventualResponse\n    .fork(\n      e => res .status (e.status) .json ({ msg: e.message }),\n      obj => res .json (obj)\n    )\n})\n\n// @route  GET /api/auth/user\n// @desc   Get user data\n// @access Private\nrouter.get('/user', auth, (req, res) => {\n//   User.findById(req.user.id)\n//     .select('-password')\n//     .then(returnedUser => res.json(returnedUser))\n  const eventualResponse = getUserById (req.user.id)\n    .chain (S.compose (eitherToFuture) (S.maybeToEither ({ status: 400, message: 'User not found' })))\n\n  eventualResponse\n    .fork (\n      e => res .status (e.status) .json ({ msg: e.message }),\n      obj => res .json (obj)\n    )\n})\n\nexport default router\n","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet PlanetSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  }\n})\n\nconst Planet = mongoose.model('planet', PlanetSchema)\n\nexport default Planet\n","// Import modules\nimport express from 'express'\nconst router = express.Router()\nimport mongoose from 'mongoose'\n\n// Import models\nimport Planet from '../../models/Planets'\n\n// @route   GET /api/planets\n// @desc    Get planets from db\n// @access  Public\nrouter.get('/', (req, res) => {\n  Planet.find().exec((err, planets) => {\n    if (err) {\n      res.end(err)\n    }\n    res.json(planets)\n  })\n})\n\n// @route    POST /api/planets\n// @desc     Add new planet\n// @accesss  Public\nrouter.post('/', (req, res) => {\n  const newPlanet = new Planet({\n    name: req.body.name\n  })\n\n  newPlanet.save().then(planet => res.json(planet))\n})\n\n// @route   DELETE /api/planets/:id\n// @desc    Delete a planet\n// @access  Public\nrouter.delete('/:id', (req, res) => {\n  Planet\n    .deleteOne({ _id: req.params.id })\n    .then(res => res.json({success: true}))\n    .catch(err => res.json({success: false}))\n})\n\nexport default router\n","const mongoose = require('mongoose')\nconst Schema = mongoose.Schema\n\nlet PostSchema = new Schema({\n  authorId: {\n    type: String,\n    required: true\n  },\n  title: {\n    type: String,\n    required: true,\n  },\n  body: {\n    type: String,\n    maxlength: 5000,\n    required: true\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  }\n})\n\nconst Post = mongoose.model('post', PostSchema)\n\nexport default Post\n","import express from 'express'\nconst router = express.Router()\n\nimport Post from '../../models/Posts'\n\n// Import middlware\nimport auth from '../../middleware/auth'\n\n// @route POST /api/posts\n// @desc  Create new post\n// @access Private\nrouter.post('/', auth, (req, res) => {\n  const {\n    title,\n    body,\n  } = req.body\n\n  const authorId = req.user.id\n\n  const newPost = new Post({\n    title,\n    body,\n    authorId\n  })\n\n  // Save new post\n  newPost\n    .save()\n    .then( savePost => {\n      res.json(savePost)\n    })\n    .catch( err => {\n      res.status(400).json({ msg: 'Error saving post' })\n    })\n})\n\n// @route   GET /api/posts/user\n// @desc    Get array of posts by user\n// @access  Private\nrouter.get('/user', auth, (req, res) => {\n  Post.find({ authorId: req.user.id })\n    .exec((err, returnedPosts) => {\n      if (err) {\n        res.end(err)\n      }\n      res.json(returnedPosts)\n    })\n})\n\n// @route   DELETE /api/posts/:id\n// @desc    Delete post\n// @access  Private\nrouter.delete('/:id', auth, (req, res) => {\n  Post\n    .deleteOne({ _id: req.params.id })\n    .then(res => res.json({ success: true }))\n    .catch(err => res.json({ success: false }))\n})\n\n// @route   PATCH /api/posts/edit\n// @desc    Edit post\n// @access  Public\nrouter.patch('/edit', auth, (req, res) => {\n  Post\n    .findByIdAndUpdate(\n      req.body._id,\n      { title: req.body.title, body: req.body.body },\n      { new: true }\n    )\n    .then(updatedPost => {\n      res.json(updatedPost)\n    })\n    .catch(err => res.status(400).json({ msg: 'Error updating post' }))\n})\n\nexport default router\n","// Import modules\nimport express from 'express'\nimport mongoose from 'mongoose'\nimport bcrypt from 'bcryptjs'\nimport jwt from 'jsonwebtoken'\nimport path from 'path'\nimport Future from 'fluture'\nimport { create, env } from 'sanctuary'\nimport { env as flutureEnv } from 'fluture-sanctuary-types'\n\nconst S = create({ checkTypes: true, env: env.concat(flutureEnv) })\n\n// Import routes\nimport usersRouter, { toMaybe, eitherToFuture } from './routes/api/users'\nimport planetsRouter from './routes/api/planets'\nimport authRouter from './routes/api/auth'\nimport postRouter from './routes/api/posts'\n\nconst port = process.env.PORT || 5000\n\nconst isMain = (main) => S.isJust (toMaybe (main)) \n\n// initialize server\nconst app = express()\n\n// Connect to db\nexport const uri = process.env.MONGODB_URI\n\nexport const dbOptions = {\n  \"useNewUrlParser\": true,\n  \"useCreateIndex\": true,\n  \"useFindAndModify\": false\n}\n\nconst eventualConnection = Future.encaseN2 (mongoose.connect)\n\nconst startDBIfCommandline = (uri) =>\n  (options) =>\n  (main) => S.compose (eitherToFuture) (S.maybeToEither ('Testing')) (toMaybe (main))\n    .chain (_ => eventualConnection (uri) (options))\n\nstartDBIfCommandline (uri) (dbOptions) (process.mainModule)\n  .fork(\n    console.error,\n    _ => console.log('>>> 🛢  DB connected...')\n  )\n\napp.use(express.json())\n\napp.get('/config.js', (req, res) => {\n  res.send(\"const NASA_API_KEY='\"+process.env.NASA_API_KEY+\"'\")\n})\n\n// Add api routers\napp.use('/api/users', usersRouter)\napp.use('/api/planets', planetsRouter)\napp.use('/api/auth', authRouter)\napp.use('/api/posts', postRouter)\n\napp.use(express.static('client/dist'))\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve(__dirname, 'client', 'dist', 'index.html'))\n})\n\n// Listen on port\nconst startServerIfCommandline = (main) =>\n  (app) =>\n  (port) => isMain (main) ?\n    S.Just (app.listen(port, () => console.log (`>>> 📡 Listening on ${port}...`))) :\n    S.Nothing\n\nstartServerIfCommandline (process.mainModule) (app) (port)\n\n","module.exports = require(\"nodemailer\");"],"sourceRoot":""}